// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/location.proto

package location

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Location struct {
	ProfileId            string   `protobuf:"bytes,1,opt,name=profileId,proto3" json:"profileId,omitempty"`
	Latitude             float64  `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d9f8c6d814f264b, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type NearMeResponse struct {
	ProfileArray         []*Location `protobuf:"bytes,1,rep,name=profileArray,proto3" json:"profileArray,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NearMeResponse) Reset()         { *m = NearMeResponse{} }
func (m *NearMeResponse) String() string { return proto.CompactTextString(m) }
func (*NearMeResponse) ProtoMessage()    {}
func (*NearMeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d9f8c6d814f264b, []int{1}
}

func (m *NearMeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NearMeResponse.Unmarshal(m, b)
}
func (m *NearMeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NearMeResponse.Marshal(b, m, deterministic)
}
func (m *NearMeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NearMeResponse.Merge(m, src)
}
func (m *NearMeResponse) XXX_Size() int {
	return xxx_messageInfo_NearMeResponse.Size(m)
}
func (m *NearMeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NearMeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NearMeResponse proto.InternalMessageInfo

func (m *NearMeResponse) GetProfileArray() []*Location {
	if m != nil {
		return m.ProfileArray
	}
	return nil
}

type Response struct {
	OperationSuccess     bool     `protobuf:"varint,1,opt,name=OperationSuccess,proto3" json:"OperationSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d9f8c6d814f264b, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOperationSuccess() bool {
	if m != nil {
		return m.OperationSuccess
	}
	return false
}

func init() {
	proto.RegisterType((*Location)(nil), "location.Location")
	proto.RegisterType((*NearMeResponse)(nil), "location.NearMeResponse")
	proto.RegisterType((*Response)(nil), "location.Response")
}

func init() { proto.RegisterFile("proto/location.proto", fileDescriptor_1d9f8c6d814f264b) }

var fileDescriptor_1d9f8c6d814f264b = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x41, 0x4a, 0xc3, 0x40,
	0x14, 0x86, 0x99, 0x16, 0x4a, 0xfa, 0x14, 0x2d, 0xa3, 0x8b, 0x10, 0x8a, 0x84, 0xac, 0x42, 0x16,
	0x8d, 0x56, 0xe8, 0xa2, 0x3b, 0x77, 0x0a, 0x56, 0x61, 0x8a, 0x1b, 0x77, 0xd3, 0xe4, 0x19, 0x02,
	0x71, 0x66, 0x98, 0x4c, 0x0a, 0xdd, 0x7a, 0x05, 0x4f, 0xe4, 0x19, 0xbc, 0x82, 0x07, 0x11, 0x27,
	0xcd, 0x14, 0xb1, 0xd2, 0xe5, 0xff, 0xbf, 0x3f, 0x5f, 0xfe, 0xf7, 0x06, 0xce, 0x95, 0x96, 0x46,
	0xa6, 0x95, 0xcc, 0xb8, 0x29, 0xa5, 0x98, 0x58, 0x49, 0xbd, 0x4e, 0x07, 0xe3, 0x42, 0xca, 0xa2,
	0xc2, 0x94, 0xab, 0x32, 0xe5, 0x42, 0x48, 0x63, 0xed, 0xba, 0xcd, 0x45, 0x2b, 0xf0, 0xee, 0xb7,
	0x49, 0x3a, 0x86, 0xa1, 0xd2, 0xf2, 0xa5, 0xac, 0xf0, 0x2e, 0xf7, 0x49, 0x48, 0xe2, 0x21, 0xdb,
	0x19, 0x34, 0x00, 0xaf, 0xe2, 0xa6, 0x34, 0x4d, 0x8e, 0x7e, 0x2f, 0x24, 0x31, 0x61, 0x4e, 0xff,
	0x7c, 0x59, 0x49, 0x51, 0xb4, 0xc3, 0xbe, 0x1d, 0xee, 0x8c, 0xe8, 0x16, 0x4e, 0x1e, 0x90, 0xeb,
	0x05, 0x32, 0xac, 0x95, 0x14, 0x35, 0xd2, 0x19, 0x1c, 0x6f, 0xc1, 0x37, 0x5a, 0xf3, 0x8d, 0x4f,
	0xc2, 0x7e, 0x7c, 0x34, 0xa5, 0x13, 0xb7, 0x44, 0xd7, 0x89, 0xfd, 0xca, 0x45, 0x33, 0xf0, 0x1c,
	0x23, 0x81, 0xd1, 0xa3, 0x42, 0x6d, 0x63, 0xcb, 0x26, 0xcb, 0xb0, 0xae, 0x6d, 0x69, 0x8f, 0xfd,
	0xf1, 0xa7, 0x1f, 0x04, 0x4e, 0x3b, 0xe4, 0x12, 0xf5, 0xba, 0xcc, 0x90, 0x32, 0x18, 0xb4, 0xad,
	0xe8, 0x9e, 0xff, 0x06, 0x7b, 0xbc, 0xe8, 0xe2, 0xed, 0xf3, 0xeb, 0xbd, 0xe7, 0x47, 0x67, 0xee,
	0xd8, 0xe9, 0xfa, 0x2a, 0x15, 0xc8, 0xf5, 0x2b, 0xce, 0x49, 0x72, 0x49, 0xe8, 0x33, 0x8c, 0x9e,
	0x54, 0xce, 0x0d, 0x2e, 0x36, 0xee, 0xaa, 0x07, 0xe8, 0xdd, 0x3e, 0xff, 0xd0, 0x1b, 0x8b, 0x9b,
	0x93, 0x64, 0x35, 0xb0, 0x0f, 0x76, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x59, 0x82, 0x64,
	0xf0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LocationServiceClient is the client API for LocationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LocationServiceClient interface {
	NearMe(ctx context.Context, in *Location, opts ...grpc.CallOption) (LocationService_NearMeClient, error)
	UpdateMyLocation(ctx context.Context, in *Location, opts ...grpc.CallOption) (*Response, error)
}

type locationServiceClient struct {
	cc *grpc.ClientConn
}

func NewLocationServiceClient(cc *grpc.ClientConn) LocationServiceClient {
	return &locationServiceClient{cc}
}

func (c *locationServiceClient) NearMe(ctx context.Context, in *Location, opts ...grpc.CallOption) (LocationService_NearMeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LocationService_serviceDesc.Streams[0], "/location.LocationService/NearMe", opts...)
	if err != nil {
		return nil, err
	}
	x := &locationServiceNearMeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LocationService_NearMeClient interface {
	Recv() (*Location, error)
	grpc.ClientStream
}

type locationServiceNearMeClient struct {
	grpc.ClientStream
}

func (x *locationServiceNearMeClient) Recv() (*Location, error) {
	m := new(Location)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *locationServiceClient) UpdateMyLocation(ctx context.Context, in *Location, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/location.LocationService/UpdateMyLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LocationServiceServer is the server API for LocationService service.
type LocationServiceServer interface {
	NearMe(*Location, LocationService_NearMeServer) error
	UpdateMyLocation(context.Context, *Location) (*Response, error)
}

// UnimplementedLocationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLocationServiceServer struct {
}

func (*UnimplementedLocationServiceServer) NearMe(req *Location, srv LocationService_NearMeServer) error {
	return status.Errorf(codes.Unimplemented, "method NearMe not implemented")
}
func (*UnimplementedLocationServiceServer) UpdateMyLocation(ctx context.Context, req *Location) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMyLocation not implemented")
}

func RegisterLocationServiceServer(s *grpc.Server, srv LocationServiceServer) {
	s.RegisterService(&_LocationService_serviceDesc, srv)
}

func _LocationService_NearMe_Handler(srv interface{}, stream grpc.ServerStream) error {
	fmt.Printf("Handler called\n")
	m := new(Location)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LocationServiceServer).NearMe(m, &locationServiceNearMeServer{stream})
}

type LocationService_NearMeServer interface {
	Send(*Location) error
	grpc.ServerStream
}

type locationServiceNearMeServer struct {
	grpc.ServerStream
}

func (x *locationServiceNearMeServer) Send(m *Location) error {
	return x.ServerStream.SendMsg(m)
}

func _LocationService_UpdateMyLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Location)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).UpdateMyLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/UpdateMyLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).UpdateMyLocation(ctx, req.(*Location))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "location.LocationService",
	HandlerType: (*LocationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateMyLocation",
			Handler:    _LocationService_UpdateMyLocation_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NearMe",
			Handler:       _LocationService_NearMe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/location.proto",
}
